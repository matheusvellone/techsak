{
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/strict"
  ],
  "plugins": [
    "@typescript-eslint",
    "eslint-comments",
    "unicorn"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["tsconfig.json"]
  },
  "rules": {
    "keyword-spacing": ["error", {
      "before": true,
      "after": true
    }],
    "indent": ["error", 2],
    "no-extra-semi": "error",
    "semi": ["error", "never"],
    "quotes": ["error", "single", {
      "avoidEscape": true
    }],
    "prefer-const": "error",
    "space-before-blocks": "error",
    "comma-dangle": ["error", "always-multiline"],
    "no-multiple-empty-lines": ["error", {
      "max": 1,
      "maxBOF": 0,
      "maxEOF": 0
    }],
    "no-multi-spaces": "error",
    "no-console": "error",
    "no-alert": "error",
    "no-useless-computed-key": "error",
    "quote-props": ["error", "as-needed"],
    "no-unused-expressions": "error",
    // Queria na verdade configurar que "ou é tudo em uma linha ou é tudo em várias linhas", mas não consegui.
    // Esse foi o mais próximo disso que consegui
    "object-curly-newline": ["error", {
      "ObjectExpression": { "multiline": true, "minProperties": 5, "consistent": true },
      "ObjectPattern": { "multiline": true, "minProperties": 5, "consistent": true },
      "ImportDeclaration": { "multiline": true, "minProperties": 50, "consistent": true },
      "ExportDeclaration": { "multiline": true, "minProperties": 5, "consistent": true }
    }],
    "object-property-newline": ["error", {
      "allowAllPropertiesOnSameLine": true
    }],

    "import/no-deprecated": "error",
    "import/no-anonymous-default-export": [0],
    "import/no-unused-modules": ["error", {
      "unusedExports": true,
      "ignoreExports": [
        "./src/app"
      ]
    }],

    "require-await": "off",
    "@typescript-eslint/require-await": "error",

    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/array-type": ["error", {
      "default": "array-simple"
    }],
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-duplicate-enum-values": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/ban-ts-comment": "error",

    "eslint-comments/no-unlimited-disable": "error",
    "eslint-comments/no-unused-disable": "error",
    "eslint-comments/no-use": ["error", {
      "allow": [
        "eslint-disable-next-line"
      ]
    }],

    "unicorn/no-unused-properties": "error"
  }
}
